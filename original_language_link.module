<?php

/**
 * @file
 * Contains original_language_link.module.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function original_language_link_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.original_language_link':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Original Language Link module is used to alter links that are pointing to untranslated pages.') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_link_alter().
 *
 */
function original_language_link_link_alter(&$variables) {
  global $base_url;
  $url = $variables['url'];
  if ($url->isRouted() && $url->getRouteName() == 'entity.node.canonical') {
    $path = $url->toString();
    if (!\Drupal\Component\Utility\UrlHelper::isExternal($path)){
      $processed_url = \Drupal::service('original_language_link.link_service')->processLink($path);
      $new_url = Url::fromUri($base_url . $processed_url);
      $variables['url'] = $new_url;
    }
  }

}

/**
 * Implements hook_preprocess_menu().
 */
function original_language_link_preprocess_menu(&$variables) {
  global $base_url;
  foreach($variables['items'] as $key => &$item) {
    $url = $item['url'];
    if (!$url->isExternal()) {
      $path = $url->toString();
      $processed_url = \Drupal::service('original_language_link.link_service')->processLink($path);
      $new_url = Url::fromUri($base_url . $processed_url);
      $item['url'] = $new_url;
    }
  }
}
